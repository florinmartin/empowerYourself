'use strict';
var empowerYourself = angular.module('app', ['ngRoute', 'ngResource', 'ngSanitize', 'ngAnimate']);

empowerYourself
    .directive('toggleClass', function () {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                element.bind('click', function () {
                    element.toggleClass(attrs.toggleClass);
                });
            }
        };
    })
    .directive('toggleDropdown', function () {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                element.on('mouseenter mouseleave', function () {
                    //console.log("das")
                    if(element.hasClass('for-user')) {
                        element.children("ul").stop().animate({zoom: "toggle", opacity: "toggle"}, 200);
                    } else {
                        element.children("ul").stop().animate({width: "toggle", height: "toggle", opacity: "toggle"}, 200);

                    }
                });
                element.children("ul").children("label").on('click', function () {
                    //console.log("das")
                    element.children("ul").stop().animate({opacity: "toggle"}, 200);
                    element.children("ul").stop().delay(200).animate({opacity: "toggle"}, 200);
                });
            }
        };
    })
    .directive('init', ['$http', function ($http) {
        return {
            restrict: 'A',
            link: function (rootScope, scope) {

                rootScope.global = [];
                rootScope.global.viewClass = '';
                scope.authenticated = false;
                rootScope.global.user = {
                    "uid": 1,
                    "first_name": "Maximilian",
                    "last_name": "Mustermann",
                    "email": "maximilian.mustermann@company.com"
                };
                rootScope.global.user.navatar = rootScope.global.user.first_name.charAt(0).toUpperCase()
                    + rootScope.global.user.first_name.charAt(0).toUpperCase();
                
            }
        };
    }]);
empowerYourself
    .config(['$locationProvider', function ($locationProvider) {
        $locationProvider.hashPrefix('');
    }])
    .config(function ($routeProvider) {
        $routeProvider
            .when("/learn/catalog", {
                templateUrl: "app/components/catalog/catalogView.html",
                scope: true,
                controller: "catalog"
            })
            .when("/account/:page", {
                templateUrl: "app/components/account/accountView.html",
                scope: true,
                controller: "account"
            })
            .otherwise({
                redirectTo: "/account/login"
            });
    });

empowerYourself
    .controller('account', ['$scope', '$rootScope','$routeParams', '$location', '$http', function ($scope, $rootScope, $routeParams, $location, $http) {

        // Set view class
        $scope.initAccount = function() {
	        $(".view").addClass("account");
	        $rootScope.authenticated = false;
	        $rootScope.getNavigation();
	        $scope.type = $routeParams.page;
    	}
        // ----
        $scope.login = [];
        $scope.doLogin = function() {
        	if(username.value.length < 3 && password.value.length < 3 ) {
        		$(".view").addClass("hasError");
        	} else {
        		$rootScope.authenticated = true;
        		$location.path('learn/catalog')
        	}
        }
        $scope.doSignup = function() {
            if(email.value.length < 3 || firstname.value.length < 3 ) {
                $(".view").addClass("hasError");
            } else {
                $rootScope.authenticated = true;
                $location.path('account/autorize')
            }
        }

    }]);

empowerYourself
	.controller('header', ['$scope', '$rootScope', '$location', '$http',
		function($scope, $rootScope, $location, $http) {

			$rootScope.getNavigation = function() {
				$http({
					method: 'GET',
					url: '/assets/json/main-navigation.json'
				}).then(function successCallback(response) {
						var navigation = response.data;
						$rootScope.navigation = [];
						angular.forEach(navigation, function(nav, key) {

							if(nav.dropdown) {
								angular.forEach(nav.dropdown, function(subnav, key) {
									if (subnav.link.indexOf('#' + $location.path()) >= 0) {
										subnav.active = true
										nav.active = true
									}
								});
							} else if (nav.link.indexOf('#' + $location.path()) >= 0) {
								nav.active = true
							}

							if ($rootScope.authenticated && (nav.privacy == "private" || nav.privacy == "global")) {
								$rootScope.navigation.push(nav);
							} else if (!$rootScope.authenticated && (nav.privacy == "public" || nav.privacy == "global")) {
								$rootScope.navigation.push(nav);
							}
						});
					},
					function errorCallback(response) {
						console.log("REST API not available")
					});
			}
			$rootScope.getNavigation();

		}
	]);
empowerYourself
    .directive('topNavigation', function () {
        return {
            restrict: 'E',
            templateUrl: "./app/components/core/header/headerView.html",
            scope: true,
            replace: true,
            controller: 'header'
        }
    });
empowerYourself
    .controller('footer', ['$scope', '$rootScope', '$http', function ($scope, $rootScope, $http) {


    }]);
empowerYourself
    .directive('bottomNavigation', function () {
        return {
            restrict: 'E',
            templateUrl: "./app/components/core/footer/footerView.html",
            scope: true,
            replace: true,
            controller: 'footer'
        }
    });
empowerYourself
    .controller('error', ['$scope', '$rootScope', '$http', function ($scope, $rootScope, $http) {

        // Set view class
        $rootScope.global.viewClass = "";

    }]);




empowerYourself
    .controller('catalog', ['$scope', '$rootScope', '$http', function ($scope, $rootScope, $http) {

        $(".view").addClass("catalog");
        $rootScope.authenticated = true;
        $rootScope.getNavigation();

        // Get catalog list
        $http({method: 'GET', url: '/assets/json/lms.catalogs.json'}).then(function successCallback(response) {
            $scope.catalogList = response.data.catalogs;
        }, function errorCallback(response) { console.log("REST API not available") });
        $http({method: 'GET', url: '/assets/json/lms.courses.json'}).then(function successCallback(response) {
            $scope.courseList = response.data.courses;
        }, function errorCallback(response) { console.log("REST API not available") });

        // Play with data
        $scope.catalogSelected = "";
        $scope.catalogSelect = function(cat) {
            $scope.catalogSelected = cat;
        };
        var date2string = function(d) {
            return ("0" + d.getDate()).slice(-2) + "-" + ("0"+(d.getMonth()+1)).slice(-2) + "-" +
                d.getFullYear() + " " + ("0" + d.getHours()).slice(-2) + ":" + ("0" + d.getMinutes()).slice(-2);
        };
        var date2stringWtime = function(d) {
            return ("0" + d.getDate()).slice(-2) + "-" + ("0"+(d.getMonth()+1)).slice(-2) + "-" +
                d.getFullYear();
        };
        $scope.courseDate2Meta = function (startDate, endDate){
            var status;
            var now = new Date();
            var startD = new Date(startDate);
            var endD = new Date(endDate);
            $scope.reminder = false;
            if(startD > now && endD > now) {
                status = "Start on " + date2string(endD);
                $scope.reminder = true;
            } else if (startD < now && endD > now) {
                status = "Available until " + date2string(endD);
                $scope.reminder = true;
            } else if (startD < now && endD < now) {
                status = "Ended on " + date2stringWtime(startD);
            } else if (startD < now && !endDate) {
                status = "Available now";
            } else {
                status = null;
            }
            return status
        };

    }]);
empowerYourself
    .filter('html2text', function () {
        return function (text) {
            return text ? String(text).replace(/<[^>]+>/gm, '') : '';
        };
    });

