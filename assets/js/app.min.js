'use strict';
var empowerYourself = angular.module('app', ['ngRoute', 'ngResource', 'ngSanitize', 'ngAnimate']);

empowerYourself
    .directive('toggleClass', function () {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                element.bind('click', function () {
                    element.toggleClass(attrs.toggleClass);
                });
            }
        };
    })
    .directive('toggleDropdown', function () {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                element.on('mouseenter mouseleave', function () {
                    //console.log("das")
                    if(element.hasClass('for-user')) {
                        element.children("ul").stop().animate({zoom: "toggle", opacity: "toggle"}, 200);
                    } else {
                        element.children("ul").stop().animate({width: "toggle", height: "toggle", opacity: "toggle"}, 200);

                    }
                });
                element.children("ul").children("label").on('click', function () {
                    //console.log("das")
                    element.children("ul").stop().animate({opacity: "toggle"}, 200);
                    element.children("ul").stop().delay(200).animate({opacity: "toggle"}, 200);
                });
            }
        };
    })
    .directive('init', ['$http', function ($http) {
        return {
            restrict: 'A',
            link: function (rootScope, scope) {
                rootScope.global = [];
                rootScope.global.viewClass = '';
                rootScope.global.user = {
                    "uid": 1,
                    "first_name": "Maximilian",
                    "last_name": "Mustermann",
                    "email": "maximilian.mustermann@company.com"
                };
                rootScope.global.user.navatar = rootScope.global.user.first_name.charAt(0).toUpperCase()
                    + rootScope.global.user.first_name.charAt(0).toUpperCase();
                $http({
                    method: 'GET',
                    url: '/assets/json/main-navigation.json'
                }).then(function successCallback(response) {
                    rootScope.navigation = response.data;
                }, function errorCallback(response) {
                    console.log("REST API not available")
                });
            }
        };
    }]);
empowerYourself
    .config(['$locationProvider', function ($locationProvider) {
        $locationProvider.hashPrefix('');
    }])
    .config(function ($routeProvider) {
        $routeProvider
            .when("/learn/catalog", {
                templateUrl: "app/components/catalog/catalogView.html",
                scope: true,
                controller: "catalog"
            })
            .otherwise({
                templateUrl: "app/components/core/error/404.html",
                controller: "error"
            });
    });

empowerYourself
    .controller('catalog', ['$scope', '$rootScope', '$http', function ($scope, $rootScope, $http) {

        // Mark the navigation entry for the catalog page
        $rootScope.navigation[1].active = $rootScope.navigation[1].dropdown[0].active = true;

        // Set view class
        $rootScope.global.viewClass = "catalog";

        // Get catalog list
        $http({method: 'GET', url: '/assets/json/lms.catalogs.json'}).then(function successCallback(response) {
            $scope.catalogList = response.data.catalogs;
        }, function errorCallback(response) { console.log("REST API not available") });
        $http({method: 'GET', url: '/assets/json/lms.courses.json'}).then(function successCallback(response) {
            $scope.courseList = response.data.courses;
        }, function errorCallback(response) { console.log("REST API not available") });

        // Play with data
        $scope.catalogSelected = "";
        $scope.catalogSelect = function(cat) {
            $scope.catalogSelected = cat;
        };
        var date2string = function(d) {
            return ("0" + d.getDate()).slice(-2) + "-" + ("0"+(d.getMonth()+1)).slice(-2) + "-" +
                d.getFullYear() + " " + ("0" + d.getHours()).slice(-2) + ":" + ("0" + d.getMinutes()).slice(-2);
        };
        var date2stringWtime = function(d) {
            return ("0" + d.getDate()).slice(-2) + "-" + ("0"+(d.getMonth()+1)).slice(-2) + "-" +
                d.getFullYear();
        };
        $scope.courseDate2Meta = function (startDate, endDate){
            var status;
            var now = new Date();
            var startD = new Date(startDate);
            var endD = new Date(endDate);
            $scope.reminder = false;
            if(startD > now && endD > now) {
                status = "Start on " + date2string(endD);
                $scope.reminder = true;
            } else if (startD < now && endD > now) {
                status = "Available until " + date2string(endD);
                $scope.reminder = true;
            } else if (startD < now && endD < now) {
                status = "Ended on " + date2stringWtime(startD);
            } else if (startD < now && !endDate) {
                status = "Available now";
            } else {
                status = null;
            }
            return status
        };


    }]);
empowerYourself
    .filter('html2text', function () {
        return function (text) {
            return text ? String(text).replace(/<[^>]+>/gm, '') : '';
        };
    });






empowerYourself
    .controller('error', ['$scope', '$rootScope', '$http', function ($scope, $rootScope, $http) {

        // Set view class
        $rootScope.global.viewClass = "";

    }]);




empowerYourself
    .controller('header', ['$scope', '$rootScope', '$http', function ($scope, $rootScope, $http) {


    }]);
empowerYourself
    .directive('topNavigation', function () {
        return {
            restrict: 'E',
            templateUrl: "./app/components/core/header/headerView.html",
            scope: true,
            replace: true,
            controller: 'header'
        }
    });